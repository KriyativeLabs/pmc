# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

//play.crypto.secret="74hpSMjfZlHYc2mtfqSJL3hlBJ2XHXmI41IjmHbK"
play.crypto.secret="xiRTUOG59P8cnOS691abpbhQftRy6fPOPjhQofmmyYcF2X5Vf3Fl0WKoGLgn"

app.auth.key="hQftRy6fPxPjhQ"
#cors.enabled="true"

# The application languages
# ~~~~~
play.http.filters = Filters
application.langs="en"
play.filters.cors {
  #allowedOrigins = ["*"]
  allowedOrigins = null
  allowedHttpMethods = ["GET", "POST", "PUT", "OPTIONS", "DELETE"]
  allowedHttpHeaders = null
  #allowedHttpHeaders = ["Accept", "Content-type","Authorization", "X-Requested-With"]
  preflightMaxAge = 3 days
}

# CORS
#play.filters.cors.allowOrigins = ["*"]
#play.filters.cors.allowHttpMethods = ["GET", "PUT", "POST", "DELETE", "OPTIONS"]
#play.filters.cors.allowHttpHeaders = ["Accept", "Authorization", "Content-Type", "Origin", "Referer", "User-Agent", "X-Requested-With"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

play.http.errorHandler = "utils.ErrorHandler"
#Workflow Downloadable logs folder
errorlog.directory = /home/ubuntu/errorlogs/

# Root logger:
logger.root=DEBUG

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

db = {
  adaptor = "postgres"
  url = "jdbc:postgresql://localhost/paymycable"
  user= "paymycable"
  password = "secret@123"
  driver = org.postgresql.Driver
  connectionPool = disabled
  keepAliveConnection = true

}

#sms.url = "http://softsms.in/app/smsapi/index.php?key=566951fb57d6a&contacts=%%CONTACTS%%&senderid=SCHOOL&msg=%%MSG%%"
#sms.url = "http://bhashsms.com/api/sendmsg.php?user=success&pass=654321&sender=BSHSMS&phone=%%CONTACTS%%&text=%%MSG%%&priority=ndnd&stype=normal"
sms.url = "http://bhashsms.com/api/sendmsg.php?user=paymycable&pass=paymycable@2&sender=PAYPMC&phone=%%CONTACTS%%&text=%%MSG%%&priority=ndnd&stype=normal"
sms.cable.payment.template = "Dear+%%NAME%%%3A%0D%0AYour+payment+for+our+cable+service+is+received.+%0D%0AReceipt+no%3A%%RECEIPT%%%0D%0APaid+amount%3A+%%PAMOUNT%%%0D%0ABalance%3A+%%BALANCE%%%0D%0AThank+you"
sms.internet.payment.template = "Dear+%%NAME%%%3A%0D%0AYour+payment+for+our+internet+service+is+received.+%0D%0AReceipt+no%3A%%RECEIPT%%%0D%0APaid+amount%3A+%%PAMOUNT%%%0D%0ABalance%3A+%%BALANCE%%%0D%0AThank+you"

